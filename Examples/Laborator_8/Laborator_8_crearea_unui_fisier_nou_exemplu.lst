     1                                  ; Codul de mai jos va crea un fisier gol, numit "ana.txt" in directorul curent
     2                                  ; Programul va folosi functia fopen pentru deschiderea/crearea fisierului si functia f close pentru inchiderea fisierului creat
     3                                  ; Deoarece in apelul functiei fopen programul foloseste modul de acces "w", daca un fisier cu acelasi nume exista deja in directorul curent, continutul acelui fisier va fi sters
     4                                  bits 32 ; assembling for the 32 bits architecture
     5                                  
     6                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     7                                  global start        
     8                                  
     9                                  ; declare external functions needed by our program
    10                                  extern exit, fopen, fclose               ; tell nasm that exit exists even if we won't be defining it
    11                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                  import fopen msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; ...
    19 00000000 616E612E74787400            nume_fisier db "ana.txt", 0 ;numele fisierului care va fi creat
    20 00000008 7700                        mod_acces db "w", 0 ;modul de deschidere a fisierului
    21                                                          ;w - pentru scriere, daca fisierul nu exista, se va crea
    22 0000000A FFFFFFFF                    descriptor_fisier dd -1 ;variabila in care vom salva descriptorul fisierului - necesar pentru a putea face referire la fisier
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ; ...
    28                                          ;apelam fopen pentru a crea fisierul
    29                                          ;functia va returna in eax descriptorul fisierului sau 0 in caz de eroare
    30                                          ; eax = fopen(nume_fisier, mod_acces)
    31 00000000 68[08000000]                    push dword mod_acces
    32 00000005 68[00000000]                    push dword nume_fisier
    33 0000000A FF15[00000000]                  call [fopen]
    34 00000010 83C408                          add esp, 4 * 2
    35                                          
    36 00000013 A3[0A000000]                    mov [descriptor_fisier], eax ;salvam valorea returnata de fopen in variabila descriptor_fisier
    37                                          
    38                                          ;verificam daca functia fopen a creat cu succes fisierul (daca eax != 0)
    39 00000018 83F800                          cmp eax, 0
    40 0000001B 740F                            je final
    41                                          
    42                                          ;apelam functia fclose pentru a inchide fisierul
    43                                          ;fclose(descriptor_fisier0
    44 0000001D FF35[0A000000]                  push dword [descriptor_fisier]
    45 00000023 FF15[00000000]                  call [fclose]
    46 00000029 83C404                          add esp, 4
    47                                          
    48                                          final:
    49                                          
    50                                          
    51                                      
    52                                          ; exit(0)
    53 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    54 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
