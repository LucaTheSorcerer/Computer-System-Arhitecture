     1                                  ;Zwei naturliche Zahlen a und b (Doppelworter im Datensegment definiert) werden gegeben. Berechne a/b und zeige den Quotient und den Rest im folgenden Format auf dem Bildschirm an: "Quotient = <Quotient>, Rest = <Re
     2                                  ;Beispiel: a = 23, b = 10 wird Folgendes angezeigt: "Quotient = 2, Rest = 3"
     3                                  ;Die Werte werden im Dezimalformat mit Vorzeichen angezeigt
     4                                  bits 32 ; assembling for the 32 bits architecture
     5                                  
     6                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     7                                  global start        
     8                                  
     9                                  ; declare external functions needed by our program
    10                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
    11                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; ...
    18 00000000 1E000000                    a dd 30
    19 00000004 04000000                    b dd 4
    20 00000008 51756F7469656E7420-         format db "Quotient = %d, Rest = %d", 0 ;The format for the output
    20 00000011 3D2025642C20526573-
    20 0000001A 74203D20256400     
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 B800000000                      mov eax, 0
    27 00000005 BB00000000                      mov ebx, 0
    28 0000000A B900000000                      mov ecx, 0
    29 0000000F BA00000000                      mov edx, 0
    30                                          
    31 00000014 A1[00000000]                    mov eax, [a]
    32 00000019 99                              cdq
    33 0000001A 8B1D[04000000]                  mov ebx, [b]
    34 00000020 F7F3                            div ebx ; edx:eax / ebx --> eax = Quotient, edx = Rest
    35                                          
    36                                          ;we call printf(format, eax, edx)
    37 00000022 52                              push dword edx
    38 00000023 50                              push dword eax
    39 00000024 68[08000000]                    push dword format
    40 00000029 FF15[00000000]                  call [printf]
    41 0000002F 83C40C                          add esp, 4 * 3
    42                                          
    43                                      
    44                                          ; exit(0)
    45 00000032 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 00000034 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
